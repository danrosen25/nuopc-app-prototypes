README for Rewind Capable NUOPC prototype
----------------------------------------------------

A two model system with rewind capabilities.

Description:

  A two-way coupled system with a customized external application,
  single driver, two model components, and connectors.

  The customized external application controls the rewind interval.

  The driver component uses the run sequence configured in the
  [runtime.cfg] file. The run loop for the driver is overriden by a
  parent clock. At the end of each run step the driver and model clocks
  are reset.

  The connector components are automatically added by the driver.

  Time intervals such as startTime, stopTime, timeStep, and rewindInterval
  can be configured in the [runtime.cfg]

  Run success is determined by the zeroValues and missingValues found in
  the final import state.

Build:
  - Set environment variable ESMFMKFILE to point to the esmf.mk of your ESMF
    installation.
  - make

Execution:
  - Optionally set environment variable ESMF_RUNTIME_COMPLIANCECHECK to ON.
  - mpirun -np X ./esmApp [runtime.cfg]
      where X is the total number of PETs, typically 4
      and [runtime.cfg] is the configuration file.

Output:
  - PET*.Log files containing compliance checker output if turned on.
  - The prototype outputs time stepping information to stdout.

Code structure:
  - Makefile         - Makefile that is based on the standard esmf.mk mechanism.
  - atm.F90          - The ATM component, specializing generic NUOPC_Model.
  - ocn.F90          - The OCN component, specializing generic NUOPC_Model.
  - driver.F90       - The DRIVER component, specializing generic NUOPC_Driver.
  - esmApp.F90       - ESM application.

Runtime configuraiton files:
  - runtime.cfg      - Used to control time intervals
